@startuml

Main --> "has a "Tournament
Tournament --> "has a "TextUI
Match --> "has a " Teams
Tournament --> "has a " Match
TextUI "has a "--> Main
Tournament --> "has a" DataIOTournament
Teams "has a"-->  DataIOTeams
DataIOTeams "has a" --> FileIOTeams
DataIOTournament "has a"-->FileIOTournament


Class Main {
- Scanner input
- int answer
-ArrayList<Teams>teams
+ createTeams()
+ mainMenu()
+addPointsToTeams()

}

Class Tournament {
- double startTime
- double endTime
- String date
+ ArrayList<Games>
+ getStartTime()
+ void setStartTime(double startTime)
+ getEndTime()
+ void setEndTime(double endTime)
+ getDate()
+ void setDate(String date)
+ addGametoTournament()
+ createTournament()
+ showAllTeams()

}

Class Teams {
- String teamName
- int teamMembers
- int numberOfGoals
- int points
+ String getTeamName()
+ void setTeamName(String teamName)
+ int getMembers()
+ void setMembers(int teamMembers)
}

Class TextUI {
- scanner console
}

Class Match {
- String matchTitle
- matchStart
- matchEnd
+ getMatchStart()
+ void setMatchStart(double matchStart)
+getMatchEnd()
+ void setMatchEnd(double matchEnd)
+ String getMatchTitle()
+ String setMatchTitle(String matchTitle)
}
interface DataIOTeams{
+ saveData()
+ loadData()
+ String getTeamName()
+ void setTeamName(String teamName)
}
abstract FileIOTeams{
- int numberOfGoals
- int points
+ saveData()
+ loadData()
+ totalNumbersOfGoals()
+totalPoints()
}

interface DataIOTournament{
+ saveData()
+ loadData()
+ showAllTeams()
+ getStartTime()
+ void setStartTime(double startTime)
+ getEndTime()
+ void setEndTime(double endTime)
+ getDate()
+ void setDate(String date)

}
abstract FileIOTournament{
- int totalRankings
+saveData()
+ loadData()
+totalRankings()
+getTotalRankings()
+void setTotalRankings(int totalRankings)
}


@enduml